# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# Action名称
name: Python application

# GitHub CI 触发时机
on:
  push:
    # 当main分支上有新的推送时触发CI 构建
    branches: [ main ]
 # 构建的步骤
jobs:
  build:
    # 使用最新版ubuntu主机作为虚拟环境
    runs-on: ubuntu-latest

    # 步骤
    steps:
    # 第一步开始：使用GitHub上的开源库actions/checkout@v2提供的功能，将main分支的代码检出到虚拟环境
    - uses: actions/checkout@v2
    # 第二步开始，名称：Set up Python 3.9
    - name: Set up Python 3.9
      # 使用开源库提供的功能在虚拟环境中安装Python
      uses: actions/setup-python@v2
      # python的版本为3.9
      with:
        python-version: 3.9
    # 第三步开始
    - name: Install dependencies
      # 在虚拟环境中将run下面的字符作为shell脚本执行
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # 第四步开始
    - name: Test with pytest
    # 在虚拟环境的终端中执行命令：pytest
      run: |
        pytest
    # 第五步
    - name: Publish to Docker Repository
      # 使用开源库提供的功能构建Docker镜像并上传到Docker Hub中
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        # 构建镜像的名称
        name: a453826252/devops_python
        # Docker Hub用户名。需要在仓库的Secret中配置
        username: ${{ secrets.DOCKER_USERNAME }}
        # Docker Hub密码，需要在仓库的Secret中配置
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 第六步开始
    - name: Server pull Docker Image
      # 使用ssh连接服务器
      uses: appleboy/ssh-action@master
      with:
        # 服务器的IP地址，需要在仓库的Secret中配置。端口号默认：22
        host: ${{ secrets.HOST }}
        # 登陆服务器的用户名，需要在仓库的Secret中配置
        username: ${{ secrets.HOST_USERNAME }}
        # 登陆服务器的密码，需要在仓库的Secret中配置
        password: ${{ secrets.HOST_PASSWORD }}
        # 服务器登陆成功后，在终端执行的命令
        script: |
          docker pull a453826252/devops_python
          docker run -d -p 5000:5000  a453826252/devops_python:latest
